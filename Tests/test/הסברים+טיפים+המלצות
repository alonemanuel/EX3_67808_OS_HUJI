

הסברים:
* התרגיל מתחלק לשתי חלקים: בניה של ספריה שמנהל מולטי ת'רדים של map&reduce ובניה דוגמאת שימוש ספציפית של המשתמש
* בכללי הספרייה היא תמיכה במולטי ת'רד למגוון של פעולות שונות,ההגדרה של מה יקרה היא ע"י המשתמש ואיך הוא מגדיר את הזוגות k1,v1-k3,v3 ואת הפונקציות
* דוגמאת הרצה מצורפת למקרה הפרטי של count.

נקודות שאולי טיפה מעורפלות:
* בריכת ת'רדים. הבריכה הינה בגודל קבוע,כל ת'רד הוא מנהל של משימות.כלומר כל עוד יש משימות,הת'רד לוקח חתיכה של משימות,מבצע אותם וכשהוא מסיים
בודק אם ישנם עוד משימות
* נעילה: הנעילה הינה לכל משתנה אשר משותף ליותר מת'רד אחד. חשוב לציין שאמנם הנעילה היא על משתנה רעיונית,בפועל היא על הגישה אליו בקטע קוד
* מטרת האופרטור > הראשון היא שום דבר
* מטרת האופרטור > השני היא להשתמש בו כ = (ע"י !> && !>) על מנת לאחד לרשימת ערכים מפתחות בעלי ערך שווה 
* מטרת האופרטור השלישי היא לכתיבת comp על מנת למיין את הרשימה הסופית לפי מפתחות

טיפים:
* להגדיר typedefים לכל הpairs
* יש המון קונטיינרים,לתת להם שמות ברורים מאוד,אחרת יש בלאגן
* לשים לב ש pthread_cond_timedwait מקבל זמן אבסולוטי,כלומר הוא מקבל שעה ספציפית ביום,למשל 14:30.
  כדי לתת לו זמן מסוים צריך לקחת את השעון הנוכחי,להוסיף לו את הזמן הרצוי ואז לתת אותו לpthread_cond_timedwait
* להשתמש בjoin בין הmap לreduce כדי לוודא שהחלק הראשון הסתיים 

סדר עבודה ממולץ(לדעתי האישית בלבד כמובן):
* להבין על דוגמא ספציפית מה אמורים לעשות
* להתחיל לבנות מהsearch.
* לבנות את הכל בלי ת'רדים בכלל,לבנות פונקציה אחת כל פעם ולראות שהיא עובדת.לעבוד לפי הסדר שמוגדר בהוראות.
* להוסיף ת'רדים וmutexים בסוף
* להוסיף טיפול שגיאות
* לבנות לוג. שימו לב שהלוג הוא קובץ נסתר,ולכן כדי לראות אותו צריך ללכת לתקיה-העדפות-הראה קבצים מוסתרים

פונקציית זמן ללוג:
string getTime()
{
	time_t rawtime;
	struct tm * timeinfo;
	char buffer [80];

	time (&rawtime);
	timeinfo = localtime (&rawtime);

	strftime (buffer,80,"[%d.%m.%Y %X]",timeinfo);
	return buffer;
}


כל מי שיש לו דברים להוסיף\לשנות\להבהיר מוזמן לפנות אלי בתגובות\פרטי ואני אוסיף
